package com.example.universityapp.Lecturer;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.example.universityapp.R;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.ml.modeldownloader.CustomModel;
import com.google.firebase.ml.modeldownloader.CustomModelDownloadConditions;
import com.google.firebase.ml.modeldownloader.DownloadType;
import com.google.firebase.ml.modeldownloader.FirebaseModelDownloader;

import org.tensorflow.lite.Interpreter;

import java.io.File;
import java.util.HashMap;
import java.util.Map;

public class ScheduleActivity extends AppCompatActivity {

    private Interpreter tflite;
    private EditText editTextStudentCount, editTextDay;
    private Button buttonPredict;

    private FirebaseFirestore firestore; // Firebase Firestore instance

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_schedule);

        // Inisialisasi Firebase Firestore
        firestore = FirebaseFirestore.getInstance();

        // Inisialisasi UI
        editTextStudentCount = findViewById(R.id.editTextStudentCount);
        editTextDay = findViewById(R.id.editTextDay);
        buttonPredict = findViewById(R.id.buttonPredict);

        // Muat model saat aplikasi dimulai
        loadModel();

        // Tombol prediksi
        buttonPredict.setOnClickListener(v -> {
            String studentCountStr = editTextStudentCount.getText().toString();
            String dayStr = editTextDay.getText().toString();

            if (!studentCountStr.isEmpty() && !dayStr.isEmpty()) {
                int studentCount = Integer.parseInt(studentCountStr);
                int day = Integer.parseInt(dayStr);
                predictSchedule(studentCount, day);
            } else {
                Toast.makeText(this, "Fill all the Form!", Toast.LENGTH_SHORT).show();
            }
        });
    }

    // Memuat model dari Firebase
    private void loadModel() {
        CustomModelDownloadConditions conditions = new CustomModelDownloadConditions.Builder()
//                .requireWifi()
                .build();

        FirebaseModelDownloader.getInstance()
                .getModel("Schedule", DownloadType.LOCAL_MODEL, conditions)
                .addOnSuccessListener(model -> {
                    File modelFile = model.getFile();
                    tflite = new Interpreter(modelFile);
                    Toast.makeText(this, "Model berhasil dimuat!", Toast.LENGTH_SHORT).show();
                })
                .addOnFailureListener(e -> {
                    e.printStackTrace();
                    Toast.makeText(this, "Gagal memuat model", Toast.LENGTH_SHORT).show();
                });
    }

    // Prediksi jadwal berdasarkan input
    private void predictSchedule(int studentCount, int day) {
        if (tflite == null) {
            Toast.makeText(this, "Model belum dimuat!", Toast.LENGTH_SHORT).show();
            return;
        }

        // Input untuk model
        float[][] input = new float[][]{{studentCount, day}};
        float[][] output = new float[1][1];

        tflite.run(input, output);

        // Ambil hasil prediksi
        float predictedTime = output[0][0];
        String time = String.format("%.0f:00", predictedTime);

        // Simpan hasil ke Firebase Firestore
        savePredictionToFirebase(studentCount, day, time);
    }

    private void savePredictionToFirebase(int studentCount, int day, String time) {
        Map<String, Object> schedule = new HashMap<>();
        schedule.put("studentCount", studentCount);
        schedule.put("day", day);
        schedule.put("predictedTime", time);
        schedule.put("timestamp", System.currentTimeMillis());

        firestore.collection("AutoGeneratedSchedules")
                .add(schedule)
                .addOnSuccessListener(docRef -> {
                    Toast.makeText(this, "Jadwal berhasil disimpan: " + time, Toast.LENGTH_LONG).show();
                    openScheduleResultsPage();
                })
                .addOnFailureListener(e -> {
                    Toast.makeText(this, "Gagal menyimpan jadwal!", Toast.LENGTH_SHORT).show();
                    Log.e("Firestore", "Error: ", e);
                });
    }

    private void openScheduleResultsPage() {
        Intent intent = new Intent(this, ScheduleResultActivity.class);
        startActivity(intent);
    }
}